import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as e,f as o,b as p,d as c,o as a}from"./app-BX2BiMm6.js";const i={};function r(d,t){return a(),l("div",null,[t[0]||(t[0]=e("h1",{id:"vscode上写python的技巧",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vscode上写python的技巧"},[e("span",null,"Vscode上写python的技巧")])],-1)),t[1]||(t[1]=e("p",null,[o("vscode对python的支持一直在跟进，目前已经可以直接使用 "),e("strong",null,"jupyter"),o(", "),e("strong",null,"python"),o(", "),e("strong",null,"pylance"),o(" 这三个插件做到较好的支持，这篇博客主要介绍了之前的一些安装方式。")],-1)),p(" more "),t[2]||(t[2]=c(`<h2 id="引子" tabindex="-1"><a class="header-anchor" href="#引子"><span>引子</span></a></h2><p>因为cs225是基于python讲数据结构和算法的，作业又都是小组作业。于是就需要一个python的多人工作流。</p><p>需要说的是，我们这里只是个人或者小工作量的合作，需要的是<strong>快速，便捷，轻量</strong>，所以选择vscode。对于更大的工程，pycharm等IDE会是更好用的</p><p>本文默认读者python和jupyter的使用，并对vscode有一定了解，同时能够独立自主的安装所需的插件</p><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><p>@[toc]</p><h2 id="_1-vscode相关插件的安装" tabindex="-1"><a class="header-anchor" href="#_1-vscode相关插件的安装"><span>1. vscode相关插件的安装</span></a></h2><h3 id="_1-1-python-插件" tabindex="-1"><a class="header-anchor" href="#_1-1-python-插件"><span>1.1 python 插件</span></a></h3><p>在vscode插件商店搜索 <code>python</code> ，安装官方（作者为Microsoft）的插件，等待安装完成。如果在wsl工作区工作，则在wsl的插件栏中，点击 <code>install on WSL</code> ，安装完成后重新加载即可。</p><p><strong>2020.7.11 update</strong> 这段时间又有一些更新：</p><ul><li><p>指定工作区缓存文件夹：</p><p>vscode设置中，将python cache folder path设置为 <code>.vscode/python_cache</code> 并且在工作区的.vscode 文件夹中，新建python_cache文件夹，重启就能用</p><p>这样可以加速换工作区时重新分析（电脑A转移到电脑B，可直接复制工作区并上手）</p></li><li><p>关于长时间下载python language server的解决方法：</p><ol><li>在输出面板查看python language server（或者anaconda pack）的输出，找到下载的地址</li><li>使用自己的下载器下载（例如IDM），得到 <code>Python-Language-Server-win-x64.0.5.51.nupkg</code></li><li>重命名为 <code>.zip</code> 文件后，用解压软件，解压到 <code>C:\\Users\\51284\\.vscode\\extensions\\ms-python.python-2020.6.91350\\languageserver.0.5.51\\</code> 文件夹中</li><li>重启vscode就能使用</li></ol></li></ul><h3 id="_1-2-git-相关插件" tabindex="-1"><a class="header-anchor" href="#_1-2-git-相关插件"><span>1.2 git 相关插件</span></a></h3><p>vscode自带git的版本管理， <code>add，commit，pull，push</code> 都有图形化界面。但是我强烈推荐在安装一个 <code>Gitlens</code> ，在多人合作中能大大提高git的效率。具体使用后文会提到。</p><h3 id="_1-3-jupyter-client" tabindex="-1"><a class="header-anchor" href="#_1-3-jupyter-client"><span>1.3 Jupyter client</span></a></h3><p>后续将会使用到jupyter client的功能，所以要在选用的python解释器环境中安装jupyter库。简单的说就是需要 <code>pip install jupyter</code> 或者用anaconda安装jupyter</p><h2 id="_2-python文件概述" tabindex="-1"><a class="header-anchor" href="#_2-python文件概述"><span>2. python文件概述</span></a></h2><h3 id="_2-1-传统的-py文件" tabindex="-1"><a class="header-anchor" href="#_2-1-传统的-py文件"><span>2.1 传统的.py文件</span></a></h3><p>vscode作为主流的文本编辑器，对python文件的支持还是很好的，代码高亮和定义快速查看都有。</p><ul><li>按住 <code>ctrl</code> 鼠标<strong>单击</strong>函数或者类，会跳转到定义的位置。</li><li>按住 <code>ctrl</code> 鼠标<strong>悬停</strong>在函数或者类上方，会出现定义上下文的小窗，即览即走。</li><li>光标在函数或者类名中，按下 <code>F12</code> 会出现代码行内嵌的小窗，以供预览定义处的上下文。</li></ul><p>当然调试的支持也很好。按下 <code>F5</code> 选择 “Python File” 就可以进入ui界面调试。<strong>会在出现错误的地方直接停下报错，不会等到把调用栈清空才traceback。</strong></p><h3 id="_2-2-jupyter的-ipynb文件" tabindex="-1"><a class="header-anchor" href="#_2-2-jupyter的-ipynb文件"><span>2.2 jupyter的.ipynb文件</span></a></h3><p>在vscode 1.4.x 版本（可能记错）中，增减了对jupyter的支持。其一是支持调用jupyter终端打开.ipynb文件。但有一说一，这个功能相当辣鸡🐔。很多jupyter notebook有的功能他都没。罪状系数如下：</p><ul><li>不能保持多个cell的编辑状态，写markdown的cell简直逼疯人</li><li>不能复制cell</li><li>经常莫名其妙的跳到最后一个cell</li></ul><p><strong>不过好在vscode天下第一文本编辑器不是吹的，.ipynb文件支持不好，但是jupyter client对.py文件的支持完美的填补了这个漏洞。</strong></p><h2 id="_3-jupyter-client对-py文件的支持-重点" tabindex="-1"><a class="header-anchor" href="#_3-jupyter-client对-py文件的支持-重点"><span>3. jupyter client对.py文件的支持（重点）</span></a></h2><blockquote><p>这是vscode对python爱的体现，是最神仙的功能没有之一。</p></blockquote><p>1.4.x版本中，另一个更新获得了我如上评价。为什么这么说呢？因为vscode通过这个功能，让普通的.py文件，能够像jupyter文件一样分块运行，而且支持markdown语法。具体实现如下：</p><h3 id="_3-1-python-code-as-jupyter-cells" tabindex="-1"><a class="header-anchor" href="#_3-1-python-code-as-jupyter-cells"><span>3.1 python code as jupyter cells</span></a></h3><ul><li>在普通的.py文件中，vscode增加了标识符 <code>#%%</code> 。当文件中出现 <code>#%%</code>， 就把其后至下一个 <code>#%%</code> 中的代码视为一个cell里的内容。同时因为是 <code>#</code> 开头，.py文件正常运行会当作注释忽略。</li><li>在每个 <code>#%%</code> 上方会出现三个选项 <code>Run Cell | Run Above | Debug Cell</code> 单击任一能实现和jupyter notebook 一样的效果。Run Cell时，界面右边会出现jupyter的终端，代码就可以分步执行。</li><li>在设置中（快捷键 <code>ctrl + ,</code> ），搜索 <code>python enter</code> ，将 ”Python › Data Science: Send Selection To Interactive Window“ 打上勾后，可以在.py文件中通过按 <code>shift + enter</code> 来执行 <code>Run Cell</code> ，更加快捷。</li><li>这里debug功能虽然可以逐步进入，但是报错要在全部运行之后才能出现（不是在error产生的地方）所以如果有error出现，还是建议用 <code>F5</code> 来调试。</li><li>右边的jupyter终端支持jupyter notebook的功能，在最上的图标功能栏中，依次是：清除所有输出（保存当前变量），<strong>重做，撤销</strong>，强制停止当前cell，重启jupyter终端（清除所有变量），<strong>查看内部变量，当前输出导出为.ipynb文件</strong>，展开所有cell。【加黑这几个功能真是爱了爱了】</li></ul><h3 id="_3-2-markdown" tabindex="-1"><a class="header-anchor" href="#_3-2-markdown"><span>3.2 markdown</span></a></h3><ul><li>同时如果在 #%% 后加 [markdown] 即 <code>#%% [markdown]</code> ，vscode将把这个cell是为markdown cell，其中支持所有markdown语法。<strong>需要注意的是</strong>，这些markdown内容需要在开头加上额外的 <code>#</code> ，这样才能不被当作是python代码误执行。</li></ul><h3 id="_3-3-py-file-→-ipynb-file" tabindex="-1"><a class="header-anchor" href="#_3-3-py-file-→-ipynb-file"><span>3.3 .py file → .ipynb file</span></a></h3><ul><li>vscode除了能够在右边的jupyter client导出为ipynb之外，也可以直接导出：资源管理器，编辑窗口空白处， <code>ctrl+shift+p</code> 调出的命令行都可以找到export as Jupyter Notebook的选项。</li></ul><figure><img src="http://img.gavin-get-up.com/20210625212631.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><pre><code>.py文件在jupyter终端的工作区快照
</code></pre><h2 id="_4-git支持" tabindex="-1"><a class="header-anchor" href="#_4-git支持"><span>4. git支持</span></a></h2><blockquote><p>你问我支持不支持啊，那我一定是支持的！——他</p></blockquote><p>先占个坑，Gitlens也是神仙插件，具体使用直接看插件页面说明。后期有空填坑</p><h2 id="end" tabindex="-1"><a class="header-anchor" href="#end"><span>.END</span></a></h2>`,39))])}const y=n(i,[["render",r],["__file","vscode-python.html.vue"]]),u=JSON.parse(`{"path":"/posts/tech/vscode-python.html","title":"Vscode上写python的技巧","lang":"en-US","frontmatter":{"date":"2020-05-04T00:00:00.000Z","categories":["Tech"],"tags":["Vscode","Python","Jupyter"],"description":"vscode对python的支持一直在跟进，目前已经可以直接使用 jupyter, python, pylance 这三个插件做到较好的支持，这篇博客主要介绍了之前的一些安装方式。","head":[["meta",{"property":"og:url","content":"https://blog.chenhaozhe.top/posts/tech/vscode-python.html"}],["meta",{"property":"og:site_name","content":"Gavin's Blog"}],["meta",{"property":"og:title","content":"Vscode上写python的技巧"}],["meta",{"property":"og:description","content":"vscode对python的支持一直在跟进，目前已经可以直接使用 jupyter, python, pylance 这三个插件做到较好的支持，这篇博客主要介绍了之前的一些安装方式。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://img.gavin-get-up.com/20210625212631.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-29T23:19:23.000Z"}],["meta",{"property":"article:tag","content":"Vscode"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"Jupyter"}],["meta",{"property":"article:published_time","content":"2020-05-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-29T23:19:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vscode上写python的技巧\\",\\"image\\":[\\"http://img.gavin-get-up.com/20210625212631.png\\"],\\"datePublished\\":\\"2020-05-04T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-29T23:19:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Gavin\\"}]}"]]},"headers":[{"level":2,"title":"引子","slug":"引子","link":"#引子","children":[]},{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"1. vscode相关插件的安装","slug":"_1-vscode相关插件的安装","link":"#_1-vscode相关插件的安装","children":[{"level":3,"title":"1.1 python 插件","slug":"_1-1-python-插件","link":"#_1-1-python-插件","children":[]},{"level":3,"title":"1.2 git 相关插件","slug":"_1-2-git-相关插件","link":"#_1-2-git-相关插件","children":[]},{"level":3,"title":"1.3 Jupyter client","slug":"_1-3-jupyter-client","link":"#_1-3-jupyter-client","children":[]}]},{"level":2,"title":"2. python文件概述","slug":"_2-python文件概述","link":"#_2-python文件概述","children":[{"level":3,"title":"2.1 传统的.py文件","slug":"_2-1-传统的-py文件","link":"#_2-1-传统的-py文件","children":[]},{"level":3,"title":"2.2 jupyter的.ipynb文件","slug":"_2-2-jupyter的-ipynb文件","link":"#_2-2-jupyter的-ipynb文件","children":[]}]},{"level":2,"title":"3. jupyter client对.py文件的支持（重点）","slug":"_3-jupyter-client对-py文件的支持-重点","link":"#_3-jupyter-client对-py文件的支持-重点","children":[{"level":3,"title":"3.1 python code as jupyter cells","slug":"_3-1-python-code-as-jupyter-cells","link":"#_3-1-python-code-as-jupyter-cells","children":[]},{"level":3,"title":"3.2 markdown","slug":"_3-2-markdown","link":"#_3-2-markdown","children":[]},{"level":3,"title":"3.3 .py file → .ipynb file","slug":"_3-3-py-file-→-ipynb-file","link":"#_3-3-py-file-→-ipynb-file","children":[]}]},{"level":2,"title":"4. git支持","slug":"_4-git支持","link":"#_4-git支持","children":[]},{"level":2,"title":".END","slug":"end","link":"#end","children":[]}],"git":{"createdTime":1672747062000,"updatedTime":1732922363000,"contributors":[{"name":"HaozheChen","email":"haozhe3@illinois.edu","commits":1},{"name":"idlesilver","email":"Haozhe.18@intl.zju.edu.cn","commits":1}]},"readingTime":{"minutes":5.15,"words":1544},"filePathRelative":"posts/tech/vscode-python.md","localizedDate":"May 4, 2020","excerpt":"\\n<p>vscode对python的支持一直在跟进，目前已经可以直接使用 <strong>jupyter</strong>, <strong>python</strong>, <strong>pylance</strong> 这三个插件做到较好的支持，这篇博客主要介绍了之前的一些安装方式。</p>\\n","autoDesc":true}`);export{y as comp,u as data};
