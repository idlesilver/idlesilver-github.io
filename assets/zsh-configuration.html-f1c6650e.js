import{_ as t,W as r,X as l,$ as o,Y as a,Z as n,a0 as s,a1 as i,E as d}from"./framework-ec87c1bc.js";const c={},h=i('<h1 id="zsh配置" tabindex="-1"><a class="header-anchor" href="#zsh配置" aria-hidden="true">#</a> Zsh配置</h1><h2 id="引子" tabindex="-1"><a class="header-anchor" href="#引子" aria-hidden="true">#</a> 引子</h2><blockquote><p>换了新电脑，终于忍不住还是想折腾一下terminal。把去个性化丢到一边了。为了美观用了zsh，部分shell的脚本不能用了。插件管理用了<strong>oh-my-zsh</strong>和<strong>zinit</strong>。OMZ方便管理，<strong>zinit</strong>提升速度。主题用了<strong>Powerlevel10k</strong>。还有一些常用的插件：<strong>zsh-z，zsh-autosuggestions，syntax-highlighting</strong></p></blockquote>',3),p=i(`<h2 id="_0-总览" tabindex="-1"><a class="header-anchor" href="#_0-总览" aria-hidden="true">#</a> 0. 总览</h2><p>最终效果长这样</p><figure><img src="http://img.gavin-get-up.com/20210617205411.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_1-1-zsh" tabindex="-1"><a class="header-anchor" href="#_1-1-zsh" aria-hidden="true">#</a> 1.1 zsh</h3><p>直接安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## apt install</span>
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">zsh</span>
<span class="token comment">## change the shell</span>
chsh <span class="token parameter variable">-s</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">which</span> <span class="token function">zsh</span><span class="token variable">)</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一次启动时会有一系列选项，我觉得要改的就只有history的存放位置。我选了放在默认的 <code>.histfile</code> 里</p><h3 id="_1-2-oh-my-zsh" tabindex="-1"><a class="header-anchor" href="#_1-2-oh-my-zsh" aria-hidden="true">#</a> 1.2 oh-my-zsh</h3>`,8),u={href:"https://ohmyz.sh/",target:"_blank",rel:"noopener noreferrer"},m=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## install oh-my-zsh</span>
<span class="token function">sh</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>装完之后，先不要调整.zshrc的设置，插件用zinit装</p><h2 id="part-2-安装zinit" tabindex="-1"><a class="header-anchor" href="#part-2-安装zinit" aria-hidden="true">#</a> part 2. 安装zinit</h2><h3 id="_2-1-根据github的教程" tabindex="-1"><a class="header-anchor" href="#_2-1-根据github的教程" aria-hidden="true">#</a> 2.1 根据github的教程</h3>`,4),v={href:"https://github.com/zdharma/zinit#automatic-installation-recommended",target:"_blank",rel:"noopener noreferrer"},b=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## install zinit</span>
<span class="token function">sh</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://raw.githubusercontent.com/zdharma/zinit/master/doc/install.sh<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-第一次zinit使用的配置" tabindex="-1"><a class="header-anchor" href="#_2-2-第一次zinit使用的配置" aria-hidden="true">#</a> 2.2 第一次zinit使用的配置</h3><p>此时重启terminal会提示是否安装4个默认的常用插件，选择确认安装就行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>zinit-zsh---z-a-as-monitor
zinit-zsh---z-a-bin-gem-node
zinit-zsh---z-a-patch-dl
zinit-zsh---z-a-rust
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="part-3-配置-zshrc" tabindex="-1"><a class="header-anchor" href="#part-3-配置-zshrc" aria-hidden="true">#</a> part 3. 配置.zshrc</h2><h3 id="_3-1-主题theme设置" tabindex="-1"><a class="header-anchor" href="#_3-1-主题theme设置" aria-hidden="true">#</a> 3.1 主题Theme设置</h3><p><code>powerlevel10k</code> 不是oh-my-zsh自带的，需要安装，这里通过zinit来装：</p><ol><li><p>注释掉 <code># ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;</code></p></li><li><p>在四个默认插件之后加上这一段：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Load a few important annexes, without Turbo</span>
<span class="token comment"># (this is currently required for annexes)</span>
zinit light-mode <span class="token keyword">for</span> <span class="token punctuation">\\</span>
    zinit-zsh/z-a-rust <span class="token punctuation">\\</span>
    zinit-zsh/z-a-as-monitor <span class="token punctuation">\\</span>
    zinit-zsh/z-a-patch-dl <span class="token punctuation">\\</span>
    zinit-zsh/z-a-bin-gem-node

<span class="token comment"># Load powerlevel10k theme</span>
zinit ice depth<span class="token string">&quot;1&quot;</span> <span class="token comment"># git clone depth</span>
zinit light romkatv/powerlevel10k
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_3-2-插件plugin设置" tabindex="-1"><a class="header-anchor" href="#_3-2-插件plugin设置" aria-hidden="true">#</a> 3.2 插件plugin设置</h3><p>在四个默认插件之后加上这一段：</p><p>这里使用 <code>light</code>是为了加速zsh的启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## Load a few important annexes, without Turbo</span>
<span class="token comment">## (this is currently required for annexes)</span>
zinit light-mode <span class="token keyword">for</span> <span class="token punctuation">\\</span>
    zinit-zsh/z-a-rust <span class="token punctuation">\\</span>
    zinit-zsh/z-a-as-monitor <span class="token punctuation">\\</span>
    zinit-zsh/z-a-patch-dl <span class="token punctuation">\\</span>
    zinit-zsh/z-a-bin-gem-node

zinit light zsh-users/zsh-autosuggestions
zinit light zdharma/fast-syntax-highlighting
zinit light agkozak/zsh-z
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="part-4-主题配置" tabindex="-1"><a class="header-anchor" href="#part-4-主题配置" aria-hidden="true">#</a> part 4. 主题配置</h2><h3 id="_4-1-字体配置" tabindex="-1"><a class="header-anchor" href="#_4-1-字体配置" aria-hidden="true">#</a> 4.1 字体配置</h3><p>为了支持powerlevel10k的花里胡哨的功能，这里选择 <code>MesloLGS NF</code> 字体。</p><p><strong>注意，要先把terminal的字体换成</strong><code>MesloLGS NF</code> <strong>之后在进行powerlevel10k的配置，否则有些图形还是看不了。</strong></p>`,16),g={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fromkatv%2Fpowerlevel10k-media%2Fraw%2Fmaster%2FMesloLGS%2520NF%2520Regular.ttf",target:"_blank",rel:"noopener noreferrer"},z={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fromkatv%2Fpowerlevel10k-media%2Fraw%2Fmaster%2FMesloLGS%2520NF%2520Bold.ttf",target:"_blank",rel:"noopener noreferrer"},k={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fromkatv%2Fpowerlevel10k-media%2Fraw%2Fmaster%2FMesloLGS%2520NF%2520Italic.ttf",target:"_blank",rel:"noopener noreferrer"},f={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fromkatv%2Fpowerlevel10k-media%2Fraw%2Fmaster%2FMesloLGS%2520NF%2520Bold%2520Italic.ttf",target:"_blank",rel:"noopener noreferrer"},_=i(`<h3 id="_4-2-其他配置" tabindex="-1"><a class="header-anchor" href="#_4-2-其他配置" aria-hidden="true">#</a> 4.2 其他配置</h3><p>通过 <code>p10k configure</code> 开始配置，对照这下图来一步一步选就行</p><figure><img src="http://img.gavin-get-up.com/20210617205728.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="part-5-其他软件的环境初始化" tabindex="-1"><a class="header-anchor" href="#part-5-其他软件的环境初始化" aria-hidden="true">#</a> part 5. 其他软件的环境初始化</h2><h3 id="_5-1-conda" tabindex="-1"><a class="header-anchor" href="#_5-1-conda" aria-hidden="true">#</a> 5.1 conda</h3><p>直接用init命令就行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda init <span class="token function">zsh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7);function F(x,w){const e=d("ExternalLinkIcon");return r(),l("div",null,[h,o(" more "),p,a("p",null,[n("直接根据官网的流程"),a("a",u,[n("https://ohmyz.sh/"),s(e)])]),m,a("p",null,[n("官方项目："),a("a",v,[n("https://github.com/zdharma/zinit#automatic-installation-recommended"),s(e)])]),b,a("ul",null,[a("li",null,[a("a",g,[n("MesloLGS NF Regular.ttf"),s(e)])]),a("li",null,[a("a",z,[n("MesloLGS NF Bold.ttf"),s(e)])]),a("li",null,[a("a",k,[n("MesloLGS NF Italic.ttf"),s(e)])]),a("li",null,[a("a",f,[n("MesloLGS NF Bold Italic.ttf"),s(e)])])]),_])}const L=t(c,[["render",F],["__file","zsh-configuration.html.vue"]]);export{L as default};
