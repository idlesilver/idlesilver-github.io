import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as i,f as e,b as l,d as t,o as h}from"./app-Ca5ETXIW.js";const p={};function r(d,s){return h(),n("div",null,[s[0]||(s[0]=i("h1",{id:"manim的安装",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#manim的安装"},[i("span",null,"Manim的安装")])],-1)),s[1]||(s[1]=i("p",null,[i("strong",null,"manim"),e("是"),i("strong",null,"3B1B"),e("用来做演示视频的python库，涉及到代码控坐标系、图形、文字等。同时有一些进阶的内容，用于控制视频、音乐等。实例可见"),i("a",{href:"https://www.bilibili.com/video/BV12K4y1A7NA",target:"_blank",rel:"noopener noreferrer"},"这个视频"),e("。")],-1)),l(" more "),s[2]||(s[2]=t(`<h2 id="manim安装的踩坑" tabindex="-1"><a class="header-anchor" href="#manim安装的踩坑"><span>manim安装的踩坑</span></a></h2><p>按道理说，跟着网上的教程来一步一步走是不会出问题的。但是我电脑内存快不够了，同时又想把manim装在WSL里，于是踩下了好多的坑。这里总结一下：</p><h3 id="首先是python相关的安装" tabindex="-1"><a class="header-anchor" href="#首先是python相关的安装"><span>首先是python相关的安装</span></a></h3><ul><li>用conda创建环境是可以的，这样可以一个系统多个版本。我用miniconda新建了环境，python版本3.7。这个环境中安装python依赖库还是推荐 <code>pip</code> git下来的 <code>requirements.txt</code> ，虽然conda里面用pip废一点点空间，但是真的方便很多，不用走弯路。</li><li>总体来说就是conda建完环境之后跟着manim的 <code>readme.md</code> 来就行了。嫌速度慢可以换成清华源</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> manim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3.7</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #-n 表示环境的名称</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> activate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> manim</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;the path of your project&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/3b1b/manim.git</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> manim</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> manimlib</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> requirements.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="然后是其他的依赖安装" tabindex="-1"><a class="header-anchor" href="#然后是其他的依赖安装"><span>然后是其他的依赖安装</span></a></h3><ul><li><p><code>sox</code> 和<code>ffmpeg</code>应该没有问题，直接apt就行。cairo也是apt，命令上官网搜。但是tex出了问题。因为有两个win和wsl两个相对独立的环境，两边都装texlive硬盘容量吃不消，于是想压榨空间。但是很不巧，失败了。</p><ul><li>一开始为了省空间在wsl安装了 <code>miktex</code>，花了一点时间，但是相关的tex编辑器是可以用的（vscode的远程tex）。所以我就以为装好了。但是结果运行manim的时候出错了，报错信息如下。具体原因在svg_modules中，似乎是svg文件生成出错了。试了很多方法之后，发现问题出在miktex缺少一些tex组件。把miktex卸载了，重新装 <code>texlive-full</code> 就行了。</li><li>嫌速度慢可以换成阿里源</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sox</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ffmpeg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> texlive-full</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libcairo2-dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h3 id="尝试跑一下example" tabindex="-1"><a class="header-anchor" href="#尝试跑一下example"><span>尝试跑一下example</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./manim.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example_scenes.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OpeningManimExample-pl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./manim.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example_scenes.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SquareToCircle</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./manim.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example_scenes.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> WarpSquare</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./manim.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example_scenes.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> WriteStuff</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./manim.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example_scenes.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UpdatersExample</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pl</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="最后是一些出现的问题的记录" tabindex="-1"><a class="header-anchor" href="#最后是一些出现的问题的记录"><span>最后是一些出现的问题的记录</span></a></h3><ul><li>运行了example，发现SquareToCircle这样不涉及文字的可以正常运行，但是有文字组件的（TexMobjct）编译不能通过。会报错 <code>UserWarning: g0-84 not recognized</code> ，并回溯到 <code>break_up_by_substrings</code> 函数出现list index out of range。原因是生成的svg的元素没有正确读入svgMobject中，导致尝试索引一个空list。 <ul><li>解决方法是：卸载了miktex，安装texlive-full（texlive不行）。</li></ul></li></ul>`,11))])}const m=a(p,[["render",r],["__file","install-manim.html.vue"]]),c=JSON.parse(`{"path":"/posts/tech/install-manim.html","title":"Manim的安装","lang":"en-US","frontmatter":{"date":"2020-02-22T00:00:00.000Z","category":["Tech"],"tag":["Manim"],"description":"manim是3B1B用来做演示视频的python库，涉及到代码控坐标系、图形、文字等。同时有一些进阶的内容，用于控制视频、音乐等。实例可见这个视频。","head":[["meta",{"property":"og:url","content":"https://blog.chenhaozhe.top/posts/tech/install-manim.html"}],["meta",{"property":"og:site_name","content":"Gavin's Blog"}],["meta",{"property":"og:title","content":"Manim的安装"}],["meta",{"property":"og:description","content":"manim是3B1B用来做演示视频的python库，涉及到代码控坐标系、图形、文字等。同时有一些进阶的内容，用于控制视频、音乐等。实例可见这个视频。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-29T23:19:23.000Z"}],["meta",{"property":"article:tag","content":"Manim"}],["meta",{"property":"article:published_time","content":"2020-02-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-29T23:19:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Manim的安装\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-02-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-29T23:19:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Gavin\\"}]}"]]},"headers":[{"level":2,"title":"manim安装的踩坑","slug":"manim安装的踩坑","link":"#manim安装的踩坑","children":[{"level":3,"title":"首先是python相关的安装","slug":"首先是python相关的安装","link":"#首先是python相关的安装","children":[]},{"level":3,"title":"然后是其他的依赖安装","slug":"然后是其他的依赖安装","link":"#然后是其他的依赖安装","children":[]},{"level":3,"title":"尝试跑一下example","slug":"尝试跑一下example","link":"#尝试跑一下example","children":[]},{"level":3,"title":"最后是一些出现的问题的记录","slug":"最后是一些出现的问题的记录","link":"#最后是一些出现的问题的记录","children":[]}]}],"git":{"createdTime":1672747062000,"updatedTime":1732922363000,"contributors":[{"name":"HaozheChen","email":"haozhe3@illinois.edu","commits":1},{"name":"idlesilver","email":"Haozhe.18@intl.zju.edu.cn","commits":1}]},"readingTime":{"minutes":2.23,"words":670},"filePathRelative":"posts/tech/install-manim.md","localizedDate":"February 22, 2020","excerpt":"\\n<p><strong>manim</strong>是<strong>3B1B</strong>用来做演示视频的python库，涉及到代码控坐标系、图形、文字等。同时有一些进阶的内容，用于控制视频、音乐等。实例可见<a href=\\"https://www.bilibili.com/video/BV12K4y1A7NA\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">这个视频</a>。</p>\\n","autoDesc":true}`);export{m as comp,c as data};
