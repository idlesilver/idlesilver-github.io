{"title":"WSL+VScode配置lc3汇编语言环境","uid":"45776bacd401b75a0e1f5aec9fc2e9bc","slug":"setup-wsl-lc3","date":"2019-10-23T06:06:05.000Z","updated":"2022-06-15T17:46:44.688Z","comments":true,"path":"api/articles/setup-wsl-lc3.json","keywords":["Student","Blog","IT","tech","mechine learning"],"cover":"http://img.gavin-get-up.com/20210624142406.png","content":"<!-- 概要 -->\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>针对UIUC课程ECE120配置的lc3调试环境。lc3是一个简易的16位计算机模型，用于计算机CPU运行逻辑的学习，详细可见<em>Introduction to Computing System</em>。主要用到了 <strong>Win10的WSL</strong>+<strong>VScode</strong> 搭建调式环境。并且涉及了linux中<strong>lc3汇编器</strong>的安装。最终还做到了wsl的图形化界面以窗口形式在windows中显示。（现在wsl进化了许多，有些方法已经过时）。<br />\n这是我严格意义上的第一篇博客，写的不太成熟，杂糅了很多内容。可以看目录直接跳转。</p></blockquote>\n<p><ul class=\"markdownIt-TOC\">\n<li><a href=\"#0-%E5%BC%95%E5%AD%90%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E9%85%8D%E7%BD%AEwsl%E4%B8%8A%E7%9A%84lc3%E7%8E%AF%E5%A2%83\">0. 引子：为什么要配置wsl上的lc3环境？</a>\n<ul>\n<li><a href=\"#01-%E7%9C%8B%E4%B8%8D%E6%83%AF%E5%AD%A6%E6%A0%A1%E7%BB%99%E7%9A%84vm\">0.1 看不惯学校给的vm</a></li>\n<li><a href=\"#02-wsl%E4%B8%8A%E5%86%99lc3%E7%9A%84%E5%88%A9%E5%BC%8A\">0.2 wsl上写lc3的利弊</a>\n<ul>\n<li><a href=\"#%E5%88%A9advantage\">👍利/advantage</a></li>\n<li><a href=\"#%E5%BC%8Adisadvantage\">👎弊/disadvantage</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#1-%E5%AE%89%E8%A3%85windows%E7%9A%84linux%E5%AD%90%E7%B3%BB%E7%BB%9Fwsl\">1. 安装windows的linux子系统（WSL）</a>\n<ul>\n<li><a href=\"#11-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AE%89%E8%A3%85wsl\">1.1 从零开始安装wsl</a></li>\n<li><a href=\"#12-wsl%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7\">1.2 wsl的一些使用技巧</a></li>\n</ul>\n</li>\n<li><a href=\"#2-%E5%AE%89%E8%A3%85vscode%E5%92%8C%E6%8F%92%E4%BB%B6\">2. 安装vscode和插件</a>\n<ul>\n<li><a href=\"#21-%E5%AE%89%E8%A3%85vscode\">2.1 安装vscode</a></li>\n<li><a href=\"#22-%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6\">2.2 安装插件</a></li>\n</ul>\n</li>\n<li><a href=\"#3-%E5%AE%89%E8%A3%85lc3%E7%BC%96%E8%AF%91%E5%99%A8\">3. 安装lc3编译器</a>\n<ul>\n<li><a href=\"#31-%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90\">3.1 更换镜像源</a></li>\n<li><a href=\"#32-%E5%AE%89%E8%A3%85%E7%BB%84%E4%BB%B6\">3.2 安装组件</a></li>\n<li><a href=\"#33-%E5%AE%89%E8%A3%85lc3%E7%BC%96%E8%AF%91%E5%99%A8\">3.3 安装lc3编译器</a></li>\n</ul>\n</li>\n<li><a href=\"#4-%E5%9C%A8vscode%E4%B8%8A%E8%BF%9C%E7%A8%8B%E6%89%93%E5%BC%80wsl\">4. 在vscode上远程打开WSL</a>\n<ul>\n<li><a href=\"#41-%E7%8E%B0%E5%9C%A8%E5%B0%9D%E8%AF%95%E7%94%A8vscode%E8%BF%9E%E6%8E%A5wsl\">4.1 现在尝试用vscode连接wsl</a></li>\n<li><a href=\"#42-%E4%B8%80%E4%BA%9B%E6%93%8D%E4%BD%9C%E7%BB%86%E8%8A%82\">4.2 一些操作细节</a></li>\n</ul>\n</li>\n<li><a href=\"#5-%E5%9C%A8vscode%E4%B8%8A%E5%86%99lc3%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80\">5. 在vscode上写lc3汇编语言</a></li>\n<li><a href=\"#6-%E5%9C%A8vscode%E4%B8%8A%E8%B0%83%E8%AF%95lc3%E7%A8%8B%E5%BA%8F%E9%87%8D%E7%82%B9\">6. 在vscode上调试lc3程序【重点】❗</a>\n<ul>\n<li><a href=\"#61-lc3%E7%9A%84%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B\">6.1 lc3的编译过程</a></li>\n<li><a href=\"#62-%E7%94%A8tasks%E5%8C%96%E7%AE%80%E8%B0%83%E8%AF%95%E8%BF%87%E7%A8%8B\">6.2 用tasks化简调试过程</a></li>\n<li><a href=\"#63-%E8%B0%83%E8%AF%95%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\">6.3 调试的注意事项</a></li>\n</ul>\n</li>\n<li><a href=\"#7-%E9%80%9A%E8%BF%87vscode%E5%8F%AF%E8%A7%86%E5%8C%96%E8%B0%83%E8%AF%95lc3%E7%A8%8B%E5%BA%8F%E9%87%8D%E7%82%B9\">7. 通过vscode可视化调试lc3程序【重点】❗❗</a>\n<ul>\n<li><a href=\"#71-win10%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2\">7.1 win10子系统的图形化界面</a></li>\n<li><a href=\"#72-%E7%94%A8vscode%E5%90%AF%E5%8A%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E8%B0%83%E8%AF%95%E7%95%8C%E9%9D%A2\">7.2 用vscode启动图形化调试界面</a></li>\n</ul>\n</li>\n<li><a href=\"#end\">.END</a></li>\n</ul>\n</p>\n<h1 id=\"0-引子为什么要配置wsl上的lc3环境\"><a class=\"markdownIt-Anchor\" href=\"#0-引子为什么要配置wsl上的lc3环境\"></a> 0. 引子：为什么要配置wsl上的lc3环境？</h1>\n<h2 id=\"01-看不惯学校给的vm\"><a class=\"markdownIt-Anchor\" href=\"#01-看不惯学校给的vm\"></a> 0.1 看不惯学校给的vm</h2>\n<p>我是计算机系的，上ECE课的时候用到了《计算机系统概论》这本书。有关于lc3汇编语言的作业。</p>\n<p>老师建议用学校封装好的linux，放在vm上跑，但我感觉vm太慢而且操作不友好。笔记本也因为内存不够的问题总是卡死，文件交互也不方便，不能直接复制帮别人检查文件。好在windows出了linux子系统（wsl），想着自己配置一个wsl的lc3环境，能省不少事。</p>\n<p>因为之前就已经在用Ubuntu子系统学linux的操作了，索性就搜了资料配置了一个环境出来。现在配置的差不多了，但是课也快上完了。算是总结一下经验，为学弟学妹们排雷了。</p>\n<h2 id=\"02-wsl上写lc3的利弊\"><a class=\"markdownIt-Anchor\" href=\"#02-wsl上写lc3的利弊\"></a> 0.2 wsl上写lc3的利弊</h2>\n<h3 id=\"利advantage\"><a class=\"markdownIt-Anchor\" href=\"#利advantage\"></a> 👍利/advantage</h3>\n<ul>\n<li>可以用vscode或别的win端的编辑器敲代码，**代码高亮，快速文本编辑，**代码书写体验极佳。</li>\n<li><strong>文件交互方便</strong>，通过资源管理器直接访问wsl文件系统，复制粘贴一键搞定</li>\n<li>vscode还能配置调试任务（tasks）<br />\n<strong>一键调试代码</strong>，配置一劳永逸</li>\n<li>不用费脑子折腾万恶的vm</li>\n</ul>\n<h3 id=\"弊disadvantage\"><a class=\"markdownIt-Anchor\" href=\"#弊disadvantage\"></a> 👎弊/disadvantage</h3>\n<ul>\n<li>需要一定的linux使用基础</li>\n<li>配置环境需要小折腾</li>\n<li>可能会有莫名的bug🐛</li>\n<li>win和linux文件系统不兼容，不注意会有换行符的问题（都用vscode就没事，见<a href=\"https://www.notion.so/Win10-WSL-VScode-lc3-9954594c71214bd38f9fe1ba5a5ace83\">后文</a>）</li>\n</ul>\n<p>因为我也是从小白开始学起，很多都是参考别人的博客和教程，所以这里就不重复造轮子了，一些配置步骤就直接引用（转载）别人的文章了。</p>\n<p>我的配置：<br />\n系统：win10 1903<br />\n电脑：surface pro（第五代）</p>\n<ul>\n<li><strong>mac</strong>本身就是Unix，用terminal就行</li>\n<li><strong>win7</strong>因为没有Linux子系统，所以不适用本文方法，乖乖用vm跑。或者升级成win10</li>\n</ul>\n<h1 id=\"1-安装windows的linux子系统wsl\"><a class=\"markdownIt-Anchor\" href=\"#1-安装windows的linux子系统wsl\"></a> 1. 安装windows的linux子系统（WSL）</h1>\n<h2 id=\"11-从零开始安装wsl\"><a class=\"markdownIt-Anchor\" href=\"#11-从零开始安装wsl\"></a> 1.1 从零开始安装wsl</h2>\n<ol>\n<li>快捷键 <code>win</code> + <code>i</code> 打开系统设置，更新win10到最新版本</li>\n<li><code>win</code>键 打开开始菜单，键盘直接输入 <code>功能</code> 会出现搜索界面，点击 <code>启用或关闭windows功能</code></li>\n<li>在弹出来的窗口的最下方，将 <code>适用于Linux的windows子系统</code> 打勾</li>\n<li>在应用商店中搜索linux，会跳出来很多可选的子系统。随个人喜好选择，我用的是 <code>Ubuntu18.04</code></li>\n<li>等待子系统安装好之后，打开应用，第一次初始化会挺久的，大概五分钟。<br />\n<strong>初始化期间不要关掉窗口</strong> ，不然会有奇奇怪怪的问题。初始化完了会让你输入用户名和密码，确认之后就可以正常使用了。</li>\n<li>现在wsl就装好了，这是一个区别与win系统的相对独立的操作系统。目前只有命令行界面，但之后会讲到图形界面。可以输入 <code>mkdir test</code> 来创建一个名为test的文件夹，也可以输入 <code>uname -a</code> 来查看系统信息。（linux的命令行操作可以上网自己学。）</li>\n</ol>\n<p><img src=\"http://img.gavin-get-up.com/20210624142020.png\" alt=\"\" /></p>\n<p><a href=\"https://blog.csdn.net/u012516524/article/details/79870414\">CSDN详细的图文教程</a>，但我觉得我说的挺清楚</p>\n<h2 id=\"12-wsl的一些使用技巧\"><a class=\"markdownIt-Anchor\" href=\"#12-wsl的一些使用技巧\"></a> 1.2 wsl的一些使用技巧</h2>\n<ul>\n<li>wsl的目录可以在win的资源管理器下直接访问，路径一般是 <code>C:\\Users\\YOUR_USERNAME\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs</code> 可以直接从里面复制文件出来。但是把外面的文件复制进去会不能识别，最好在命令行中用cp命令（因为文件系统不同，linux不能识别win的文件）</li>\n<li>wsl命令行也可以通过在cmd或者powershell中输入 <code>bash</code> 来开启</li>\n</ul>\n<h1 id=\"2-安装vscode和插件\"><a class=\"markdownIt-Anchor\" href=\"#2-安装vscode和插件\"></a> 2. 安装vscode和插件</h1>\n<h2 id=\"21-安装vscode\"><a class=\"markdownIt-Anchor\" href=\"#21-安装vscode\"></a> 2.1 安装vscode</h2>\n<p>进入<a href=\"https://code.visualstudio.com/\">vscode官网</a>，下载最新版本的vscode，安装</p>\n<h2 id=\"22-安装插件\"><a class=\"markdownIt-Anchor\" href=\"#22-安装插件\"></a> 2.2 安装插件</h2>\n<ol>\n<li>打开vscode，左边栏第5个点进去</li>\n<li>在最上方搜索栏输入 <code>Chinese</code>  安装搜索结果中的第一个，作者为Mircosoft的插件。</li>\n<li>在最上方搜索栏输入 <code>remote - WSL</code> 安装搜索结果中的第一个，作者为Mircosoft的插件。</li>\n<li>在最上方搜索栏输入 <code>LC3 Assembly</code> 安装搜索结果中作者为PaperFanz的插件。</li>\n</ol>\n<p><img src=\"http://img.gavin-get-up.com/20210624142049.png\" alt=\"\" /></p>\n<p><img src=\"http://img.gavin-get-up.com/20210624142127.png\" alt=\"\" /></p>\n<h1 id=\"3-安装lc3编译器\"><a class=\"markdownIt-Anchor\" href=\"#3-安装lc3编译器\"></a> 3. 安装lc3编译器</h1>\n<h2 id=\"31-更换镜像源\"><a class=\"markdownIt-Anchor\" href=\"#31-更换镜像源\"></a> 3.1 更换镜像源</h2>\n<p>因为wsl的ubuntu发行版真的太干净了，很多正常发行版有的软件他都没有，所以需要手动把编译lc3编译器的工具装上。鉴于国内访问外往速度感人，我们先把镜像源换成阿里云镜像。</p>\n<p>熟悉linux操作的直接进入/etc/apt/文件夹，把当前source.list备份成source.list.backup，再用vim或nano将下面的内容覆盖原文件</p>\n<p>看不懂上面一句的，打开资源管理器，进入<code>C:\\Users\\YOUR_USERNAME\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\etc\\apt</code> （用你的用户名代替YOUR_USERNAME）用vscode打开 <code>source.list</code> 文件，注释当前全部内容（ <code>ctrl + A</code> , <code>ctrl + /</code>），再把下面的内容复制进去，保存。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 阿里源</span>\ndeb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>进入命令行，输入下面这行命令就能更新镜像源，获得速度加成了。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"32-安装组件\"><a class=\"markdownIt-Anchor\" href=\"#32-安装组件\"></a> 3.2 安装组件</h2>\n<p>linux安装软件很方便，只需要一行命令，这里我们安装wish gcc flex unzip wget这5个软件。打开命令行，输入</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> wish gcc flex <span class=\"token function\">unzip</span> <span class=\"token function\">wget</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>输入密码再确认就可以了。</p>\n<p>亲测换成阿里源速度基本是原来的10倍（网好的话可能是100倍）。</p>\n<h2 id=\"33-安装lc3编译器\"><a class=\"markdownIt-Anchor\" href=\"#33-安装lc3编译器\"></a> 3.3 安装lc3编译器</h2>\n<p>具体安装就参照<a href=\"https://blog.csdn.net/STURobotic/article/details/88909744\">这一篇文章</a><br />\n吧，写的很详细</p>\n<p>补充一下：</p>\n<ul>\n<li>强烈建议查看📑<a href=\"http://highered.mheducation.com/sites/0072467509/student_view0/index.html\">官网的说明文档</a>，有详细的使用说明，可以解决很多问题</li>\n<li>下载及解压两个源文件可以用以下命令</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 下载lc3仿真器及编译工具</span>\n<span class=\"token function\">wget</span> http://highered.mheducation.com/sites/dl/free/0072467509/104652/lc3tools_v12.zip\n<span class=\"token comment\"># 下载c语言转lc3汇编语言转换器工具</span>\n<span class=\"token function\">wget</span> http://highered.mheducation.com/sites/dl/free/0072467509/104652/lcc.zip\n<span class=\"token comment\"># 解压压缩包</span>\n<span class=\"token function\">unzip</span> lc3tools_v12.zip\n<span class=\"token function\">unzip</span> lcc.zip<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"4-在vscode上远程打开wsl\"><a class=\"markdownIt-Anchor\" href=\"#4-在vscode上远程打开wsl\"></a> 4. 在vscode上远程打开WSL</h1>\n<h2 id=\"41-现在尝试用vscode连接wsl\"><a class=\"markdownIt-Anchor\" href=\"#41-现在尝试用vscode连接wsl\"></a> 4.1 现在尝试用vscode连接wsl</h2>\n<ol>\n<li>打开vscode，如果你已经安装了 <strong>remote - WSL</strong> 的话，左下角会有 <code>&gt;&lt;</code> 符号，点击后在下拉栏选择 <code>New Windows</code></li>\n<li>在弹出的新窗口中：打开vscode资源管理器（左侧栏第一个）→ <code>打开文件夹</code> → 在下拉栏中选择你要用来存放lc3相关文件的文件夹。成功打开之后，所有操作基本与编辑windows系统下的文件相同。</li>\n</ol>\n<p><img src=\"http://img.gavin-get-up.com/20210624142306.png\" alt=\"\" /></p>\n<p><img src=\"http://img.gavin-get-up.com/20210624142316.png\" alt=\"\" /></p>\n<h2 id=\"42-一些操作细节\"><a class=\"markdownIt-Anchor\" href=\"#42-一些操作细节\"></a> 4.2 一些操作细节</h2>\n<ul>\n<li>文件的复制、移动、删除等操作可以子啊左侧资源管理器里，通过拖拽完成。delete是 <strong>永久删除</strong> 不能恢复。在windows资源管理器中（<code>C:\\Users\\YOUR_USERNAME\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs</code>）复制移动后，可能在wsl中不能识别而没有显示。</li>\n<li>linux系统和windows系统的 <strong>换行符</strong> 不同。简单来说就是\n<ul>\n<li>对linux系统的文件，右下角一排中选择 <code>LF</code></li>\n<li>对windows系统的文件，右下角一排中用 <code>CRLF</code></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"5-在vscode上写lc3汇编语言\"><a class=\"markdownIt-Anchor\" href=\"#5-在vscode上写lc3汇编语言\"></a> 5. 在vscode上写lc3汇编语言</h1>\n<ol>\n<li>在远程wsl模式下的vscode中，打开 <code>扩展（左侧栏四个小方形那个）</code>，把之前安装的<a href=\"https://www.notion.so/Win10-WSL-VScode-lc3-9954594c71214bd38f9fe1ba5a5ace83\">三个插件</a> <code>install in WSL</code></li>\n<li>打开vscode资源管理器，新建一个文件test.asm，注意以.asm扩展名结尾。</li>\n<li>打开这个文件，就能快乐的用vscode写lc3了。从此<strong>多行复制，代码片段，语法高亮，TODO tree</strong>都有了，而且启动嗖嗖的快，颜值唰唰滴高。vm有生灵倒悬之急，岂不美哉？</li>\n</ol>\n<p><img src=\"http://img.gavin-get-up.com/20210624142331.png\" alt=\"\" /></p>\n<h1 id=\"6-在vscode上调试lc3程序重点\"><a class=\"markdownIt-Anchor\" href=\"#6-在vscode上调试lc3程序重点\"></a> 6. 在vscode上调试lc3程序【重点】❗</h1>\n<h2 id=\"61-lc3的编译过程\"><a class=\"markdownIt-Anchor\" href=\"#61-lc3的编译过程\"></a> 6.1 lc3的编译过程</h2>\n<p>想要调试lc3，首先要知道他是怎么工作的。这也是学习lc3的一部分。</p>\n<p>你写的汇编伪代码会经过两轮pass，生成.sym和.obj文件。.obj文件（也就是机器码）再被lc3sim仿真器读取，由仿真器来模拟lc3执行代码的过程。</p>\n<p>因此，一般而言，调试lc3汇编代码需要两行命令， <code>lc3as test.asm</code> 和 <code>lc3sim test.obj</code> 有时候需要打印输出还要 <code>lc3sim -s testcommand &gt; myoutfile</code> 等等。可是这些重复的输入能不能简单一点呢？</p>\n<p>当然可以，这里就用到了vscode的“tasks”功能，把重复的工作化简。</p>\n<h2 id=\"62-用tasks化简调试过程\"><a class=\"markdownIt-Anchor\" href=\"#62-用tasks化简调试过程\"></a> 6.2 用tasks化简调试过程</h2>\n<p>你可以把vscode的tasks看作是<strong>一键执行预定脚本</strong>的功能。把调试命令设置好后，只需要一键就可以重复调用。具体操作如下</p>\n<p>若你没有改过快捷键绑定，在文本编辑界面 <code>ctrl + shift + B</code> 就会弹出配置任务（tasks）的下拉栏 → 配置任务 → Others。一个名为tasks.json的文件会创建在.vscode文件夹内，这是vscode放置当前工作区配置的文件夹，不要删去。</p>\n<details class=\"custom-details\">\n<summary>用下面的代码覆盖里面的内容，把注释的地方改成自己对应安装的。</summary>\n<p><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// See https://go.microsoft.com/fwlink/?LinkId=733558</span>\n    <span class=\"token comment\">// for the documentation about the tasks.json format</span>\n    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.0.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"tasks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lc3as asmble\"</span><span class=\"token punctuation\">,</span>              <span class=\"token comment\">//之后调用时显示的名字</span>\n            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"shell\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$HOME/bin/lc3as\"</span><span class=\"token punctuation\">,</span>       <span class=\"token comment\">//改成你的lc3as的路径</span>\n            <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"$&#123;fileBasename&#125;\"</span>               <span class=\"token comment\">//command+args就是你给命令行的信号，这里相当于lc3as test.asm</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"options\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token property\">\"cwd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$&#123;fileDirname&#125;\"</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"presentation\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token property\">\"echo\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"reveal\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"always\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"focus\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"panel\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"shared\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"showReuseMessage\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"clear\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"group\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"problemMatcher\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lc3sim simulate\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"shell\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$HOME/bin/lc3sim\"</span><span class=\"token punctuation\">,</span>          <span class=\"token comment\">//改成你的lc3sim的路径</span>\n            <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"$&#123;fileBasenameNoExtension&#125;.obj\"</span>    <span class=\"token comment\">//这里相当于lc3sim test.obj</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"options\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token property\">\"cwd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$&#123;fileDirname&#125;\"</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"presentation\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token property\">\"echo\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"reveal\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"always\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"focus\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"panel\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"shared\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"showReuseMessage\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"clear\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"group\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"problemMatcher\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lc3 CLI debug\"</span><span class=\"token punctuation\">,</span>                  <span class=\"token comment\">//这个task用来整合上面两个tasks，能一键编译加调试</span>\n            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"shell\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"dependsOrder\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sequence\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"dependsOn\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"lc3as asmble\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"lc3sim simulate\"</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"group\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"problemMatcher\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</p>\n</details>\n<p>这样一来，回到文本编辑的地方就可以通过按下<code>ctrl + shift + B</code> 来调用tasks啦。调用成功🎉🎉🎉</p>\n<p><img src=\"http://img.gavin-get-up.com/20210624142346.png\" alt=\"\" /></p>\n<h2 id=\"63-调试的注意事项\"><a class=\"markdownIt-Anchor\" href=\"#63-调试的注意事项\"></a> 6.3 调试的注意事项</h2>\n<ol>\n<li>建议先用lc3 asmble测试编译，到编译成功后再用lc3sim来调试。<br />\n因为直接用lc3sim相当于连着使用了lc3 asmble和lc3 simulate两个tasks，这样lc3as的输出会一闪而过，如果编译没有成功的话，.obj文件没有更新，调试的仍是修改前代码对应的.obj文件。</li>\n<li>用lc3sim调试完了之后，<strong>记得用 <code>quit</code> 命令退出</strong>，不然下一次不会进入新文件的调试环境。</li>\n<li>有测试文件或输出要求的也可以实现，就是新建几个对应命令的tasks，再用类似lc3sim的task连接起来。</li>\n<li>tasks文件的具体书写规则上📑<a href=\"https://code.visualstudio.com/docs/editor/tasks#vscode\">官方文档</a>看吧（不愿意看英文的可以 <s>换一个脑子</s> 用chrome网页翻译代替）。用好了能有骚操作，对别的语言也是如此。</li>\n<li>不知道能不能用debug功能实现和lc3sim的对接，没有研究，要是可以的话就能F5一键调试了。但是断点好像不能传递给lc3sim。😝反正我学完lc3了，以后都不用了，不折腾了。而且现在也挺方便。</li>\n</ol>\n<h1 id=\"7-通过vscode可视化调试lc3程序重点\"><a class=\"markdownIt-Anchor\" href=\"#7-通过vscode可视化调试lc3程序重点\"></a> 7. 通过vscode可视化调试lc3程序【重点】❗❗</h1>\n<p>单单把命令行的调试界面整合到vscode中似乎还不够方便，用vm的同学一个 <code>lc3sim-tk</code> 的图形化界面就把黑底白字的命令行比下去了。那既然都是重复调用命令，能不能也用tasks来启动图形化的调试界面呢？</p>\n<h2 id=\"71-win10子系统的图形化界面\"><a class=\"markdownIt-Anchor\" href=\"#71-win10子系统的图形化界面\"></a> 7.1 win10子系统的图形化界面</h2>\n<ol>\n<li>\n<p>具体的方法就参照<a href=\"http://baijiahao.baidu.com/s?id=1596652006568524478&amp;wfr=spider&amp;for=pc\">这篇教程</a>来就行了。推荐使用第二个方法，也就是xming方案。这样可以让弹出的窗口和win的窗口并列，沉浸式的debug体验极佳。</p>\n<p><a href=\"http://baijiahao.baidu.com/s?id=1596652006568524478&amp;wfr=spider&amp;for=pc\">Win10子系统安装图形化界面的两种方法</a></p>\n</li>\n<li>\n<p>总结一下这篇教程里的具体命令操作，方便以后回看</p>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#第一种方法（远程桌面）</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> xorg xfce4 xrdp\n<span class=\"token function\">sudo</span> <span class=\"token function\">sed</span> -i <span class=\"token string\">'s/port=3389/port=3390/g'</span> /etc/xrdp/xrdp.ini\n<span class=\"token function\">sudo</span> <span class=\"token builtin class-name\">echo</span> xfce4-session <span class=\"token operator\">></span>~/.xsession\n<span class=\"token function\">sudo</span> <span class=\"token function\">service</span> xrdp restart\n<span class=\"token comment\">#win自带的远程桌面连接到127.0.0.1:3390，127.0.0.1是本地机器的回送ip地址。</span>\n\n<span class=\"token comment\">#第二种方法</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> xorg xfce4 openssh-server\n<span class=\"token comment\">#windows安装xming，启动xming</span>\n<span class=\"token environment constant\">DISPLAY</span>:<span class=\"token operator\">=</span><span class=\"token number\">0</span> lc3sim-tk    <span class=\"token comment\">#跟着你要启动的图形化程序命令</span>\n<span class=\"token comment\">#就可以在win中弹出linux的图形化窗口了</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>一些小技巧</p>\n<ol>\n<li>进入xming launch可以选择不同的窗口显示方式。</li>\n<li>进入~/.bashrc，添加 <code>alias D='DISPLAY:=0'</code> ，可以把DISPLAY:=0化简成“D”，以后就可以用 <code>D lc3sim-tk</code> 来启动了</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"72-用vscode启动图形化调试界面\"><a class=\"markdownIt-Anchor\" href=\"#72-用vscode启动图形化调试界面\"></a> 7.2 用vscode启动图形化调试界面</h2>\n<p>原理还是一样，用tasks来代替重复输入命令。把下面的代码复制到tasks.json文件前几个tasks的后面，就可以了。</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lc3sim-tk simulate\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"shell\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"DISPLAY=:0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"/home/gavin/bin/lc3tools/lc3sim-tk\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">//改成你的lc3sim-tk的路径</span>\n        <span class=\"token string\">\"$&#123;fileBasenameNoExtension&#125;.obj\"</span>       <span class=\"token comment\">//这里相当于DISPLAY:=0 lc3sim-tk test.obj</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"options\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">\"cwd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$&#123;fileDirname&#125;\"</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"presentation\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">\"echo\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>                         <span class=\"token comment\">//因为是图形化界面，所以就不用显示命令行的输出了</span>\n        <span class=\"token property\">\"reveal\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"never\"</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token property\">\"group\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"problemMatcher\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lc3 tk debug\"</span><span class=\"token punctuation\">,</span>                  <span class=\"token comment\">//这个task用来整合上编译和图形化的界面，能一键编译加调试</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"shell\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dependsOrder\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sequence\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dependsOn\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"lc3as asmble\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"lc3sim-tk simulate\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"group\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"problemMatcher\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>至此，图形化就完成了，所有vm中的所有功能关于lc3都能在vscode中实现了。✨🎉✨🎉</p>\n<p><img src=\"http://img.gavin-get-up.com/20210624142406.png\" alt=\"\" /></p>\n<h1 id=\"end\"><a class=\"markdownIt-Anchor\" href=\"#end\"></a> .END</h1>\n","feature":"ture","text":" 针对UIUC课程ECE120配置的lc3调试环境。lc3是一个简易的16位计算机模型，用于计算机CPU运行逻辑的学习，详细可见Introduction to Computing System。主要用到了 Win10的WSL+VScode 搭建调式环境。并且涉及了linux中lc...","link":"","photos":[],"count_time":{"symbolsCount":"9.9k","symbolsTime":"9 mins."},"categories":[{"name":"Tech","slug":"Tech","count":8,"path":"api/categories/Tech.json"},{"name":"vscode","slug":"Tech/vscode","count":3,"path":"api/categories/Tech/vscode.json"},{"name":"wsl","slug":"Tech/wsl","count":2,"path":"api/categories/Tech/wsl.json"},{"name":"ECE","slug":"Tech/ECE","count":2,"path":"api/categories/Tech/ECE.json"},{"name":"lc3","slug":"Tech/ECE/lc3","count":1,"path":"api/categories/Tech/ECE/lc3.json"}],"tags":[{"name":"vscode","slug":"vscode","count":3,"path":"api/tags/vscode.json"},{"name":"wsl","slug":"wsl","count":2,"path":"api/tags/wsl.json"},{"name":"lc3","slug":"lc3","count":1,"path":"api/tags/lc3.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#0-%E5%BC%95%E5%AD%90%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E9%85%8D%E7%BD%AEwsl%E4%B8%8A%E7%9A%84lc3%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\"> 0. 引子：为什么要配置wsl上的lc3环境？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#01-%E7%9C%8B%E4%B8%8D%E6%83%AF%E5%AD%A6%E6%A0%A1%E7%BB%99%E7%9A%84vm\"><span class=\"toc-text\"> 0.1 看不惯学校给的vm</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#02-wsl%E4%B8%8A%E5%86%99lc3%E7%9A%84%E5%88%A9%E5%BC%8A\"><span class=\"toc-text\"> 0.2 wsl上写lc3的利弊</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%A9advantage\"><span class=\"toc-text\"> 👍利&#x2F;advantage</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%8Adisadvantage\"><span class=\"toc-text\"> 👎弊&#x2F;disadvantage</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E5%AE%89%E8%A3%85windows%E7%9A%84linux%E5%AD%90%E7%B3%BB%E7%BB%9Fwsl\"><span class=\"toc-text\"> 1. 安装windows的linux子系统（WSL）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AE%89%E8%A3%85wsl\"><span class=\"toc-text\"> 1.1 从零开始安装wsl</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#12-wsl%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7\"><span class=\"toc-text\"> 1.2 wsl的一些使用技巧</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E5%AE%89%E8%A3%85vscode%E5%92%8C%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\"> 2. 安装vscode和插件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#21-%E5%AE%89%E8%A3%85vscode\"><span class=\"toc-text\"> 2.1 安装vscode</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#22-%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\"> 2.2 安装插件</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E5%AE%89%E8%A3%85lc3%E7%BC%96%E8%AF%91%E5%99%A8\"><span class=\"toc-text\"> 3. 安装lc3编译器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#31-%E6%9B%B4%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90\"><span class=\"toc-text\"> 3.1 更换镜像源</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#32-%E5%AE%89%E8%A3%85%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\"> 3.2 安装组件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#33-%E5%AE%89%E8%A3%85lc3%E7%BC%96%E8%AF%91%E5%99%A8\"><span class=\"toc-text\"> 3.3 安装lc3编译器</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E5%9C%A8vscode%E4%B8%8A%E8%BF%9C%E7%A8%8B%E6%89%93%E5%BC%80wsl\"><span class=\"toc-text\"> 4. 在vscode上远程打开WSL</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#41-%E7%8E%B0%E5%9C%A8%E5%B0%9D%E8%AF%95%E7%94%A8vscode%E8%BF%9E%E6%8E%A5wsl\"><span class=\"toc-text\"> 4.1 现在尝试用vscode连接wsl</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#42-%E4%B8%80%E4%BA%9B%E6%93%8D%E4%BD%9C%E7%BB%86%E8%8A%82\"><span class=\"toc-text\"> 4.2 一些操作细节</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-%E5%9C%A8vscode%E4%B8%8A%E5%86%99lc3%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\"> 5. 在vscode上写lc3汇编语言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#6-%E5%9C%A8vscode%E4%B8%8A%E8%B0%83%E8%AF%95lc3%E7%A8%8B%E5%BA%8F%E9%87%8D%E7%82%B9\"><span class=\"toc-text\"> 6. 在vscode上调试lc3程序【重点】❗</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#61-lc3%E7%9A%84%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\"> 6.1 lc3的编译过程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#62-%E7%94%A8tasks%E5%8C%96%E7%AE%80%E8%B0%83%E8%AF%95%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\"> 6.2 用tasks化简调试过程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#63-%E8%B0%83%E8%AF%95%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\"> 6.3 调试的注意事项</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#7-%E9%80%9A%E8%BF%87vscode%E5%8F%AF%E8%A7%86%E5%8C%96%E8%B0%83%E8%AF%95lc3%E7%A8%8B%E5%BA%8F%E9%87%8D%E7%82%B9\"><span class=\"toc-text\"> 7. 通过vscode可视化调试lc3程序【重点】❗❗</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#71-win10%E5%AD%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2\"><span class=\"toc-text\"> 7.1 win10子系统的图形化界面</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#72-%E7%94%A8vscode%E5%90%AF%E5%8A%A8%E5%9B%BE%E5%BD%A2%E5%8C%96%E8%B0%83%E8%AF%95%E7%95%8C%E9%9D%A2\"><span class=\"toc-text\"> 7.2 用vscode启动图形化调试界面</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#end\"><span class=\"toc-text\"> .END</span></a></li></ol>","author":{"name":"Gavin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"浙江大学国际学院，大四，炼丹人👨‍💻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/idlesilver"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/7091281/"}}}},"mapped":true,"prev_post":{"title":"在wsl上写mp的辛酸血泪史","uid":"fb60864ba6c70d12dc9f40aaad0945f8","slug":"vscode-wsl-c","date":"2019-11-07T10:06:11.000Z","updated":"2022-06-15T17:46:44.689Z","comments":true,"path":"api/articles/vscode-wsl-c.json","keywords":["Student","Blog","IT","tech","mechine learning"],"cover":"http://img.gavin-get-up.com/20210625182945.png","text":" 大一学习ECE120时用vscode写C程 (课程的mp, machine problem) 的工作流，做了简单的记录。主要包括自动编译调试脚本，valgrind调试输出。以及在不同虚拟机平台调试C程的方法。因为是仅针对课程内容的环境调试，内容比较个性化，适合初学者使用，也能更...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"16 mins."},"categories":[{"name":"Tech","slug":"Tech","count":8,"path":"api/categories/Tech.json"},{"name":"vscode","slug":"Tech/vscode","count":3,"path":"api/categories/Tech/vscode.json"},{"name":"wsl","slug":"Tech/wsl","count":2,"path":"api/categories/Tech/wsl.json"},{"name":"ECE","slug":"Tech/ECE","count":2,"path":"api/categories/Tech/ECE.json"},{"name":"C","slug":"Tech/ECE/C","count":1,"path":"api/categories/Tech/ECE/C.json"}],"tags":[{"name":"vscode","slug":"vscode","count":3,"path":"api/tags/vscode.json"},{"name":"wsl","slug":"wsl","count":2,"path":"api/tags/wsl.json"},{"name":"C","slug":"C","count":1,"path":"api/tags/C.json"}],"author":{"name":"Gavin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"浙江大学国际学院，大四，炼丹人👨‍💻","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/idlesilver"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/7091281/"}}}},"feature":true},"next_post":{}}